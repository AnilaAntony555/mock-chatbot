# -*- coding: utf-8 -*-
"""Untitled37.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZMBUfwCm4s2bSFMp0GHsgp09aXIPqLgu
"""

from flask import Flask, request, jsonify

app = Flask(__name__)

# FAQ Knowledge Base (customize for your eCommerce store)
faq_base = {
    "when will my order ship?": "Orders typically ship within 1-2 business days. Check your order status!",
    "how do i return an item?": "Returns are accepted within 30 days. Start the process in your account.",
    "what’s your refund policy?": "Refunds are processed within 5-7 days after we receive your return.",
    "where is my order?": "I can check that! Please say 'track order #12345' with your order number.",
    "do you ship internationally?": "Shipping options vary—check our shipping page!",
}

# Mock Shopify API call
def get_order_mock(order_id):
    mock_orders = {
        "12345": {"fulfillment_status": "shipped", "tracking_number": "1Z9999", "carrier": "UPS"},
        "67890": {"fulfillment_status": "pending", "tracking_number": None, "carrier": None}
    }
    return mock_orders.get(order_id, None)

# Chatbot Logic
def chatbot_response(user_input):
    user_input = user_input.lower().strip()

    # FAQ Check
    for question, answer in faq_base.items():
        if question in user_input:
            return answer

    # Order Tracking
    if user_input.startswith("track order"):
        order_id = user_input.split("#")[-1].strip() if "#" in user_input else None
        if not order_id:
            return "Please provide an order number, e.g., 'track order #12345'."

        order = get_order_mock(order_id)
        if order:
            status = order["fulfillment_status"]
            tracking = f"{order['carrier']}: {order['tracking_number']}" if order["tracking_number"] else "Not shipped yet."
            return f"Order #{order_id}: {status}. Tracking: {tracking}"
        return f"Couldn’t find order #{order_id}. Check the number!"

    # Mock Fallback
    return "Hello! How can I assist you with your shopping today?"

# API Endpoint
@app.route('/chat', methods=['POST'])
def chat():
    data = request.get_json()
    message = data.get('message', '')
    if not message:
        return jsonify({"reply": "Please send a message!"}), 400
    reply = chatbot_response(message)
    return jsonify({"reply": reply})

@app.route('/')
def home():
    return "Mock eCommerce Chatbot is live on Render!"

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)